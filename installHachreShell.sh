#!/bin/bash

c="curl -fsSL"
set -e

# Require root to run.
if [ $(whoami) != "root" ]; then
	echo "Error: This setup needs to be run as root."
	exit 1
fi

# FreeBSD has no curl by default
which curl 1>/dev/null 2>&1
if [ "$?" != "0" ]; then
	echo "Please install 'curl' and then run this again."
	exit 1
fi

cmd="$1"
# Load hachreAliases
echo "Loading hachreAliases..."
if [ "$cmd" != "--no-internet" ]; then
	$c https://raw.githubusercontent.com/hachre/aliases/master/source/aliases.sh > /tmp/aliases.sh
	source /tmp/aliases.sh || true
	rm /tmp/aliases.sh
	rm -R /usr/local/hachre/aliases 2>/dev/null || true
fi

# Automatic installation of prequisites
function installPrequisites {
	# Set the noconfirm flag based on the distro in use
	noconfirm="-y"
	if [ "$dyDetectedDistro" == "arch" ]; then
		noconfirm="--noconfirm"
	fi

	# CentOS specific prequisities
	if [ "$dyDetectedDistro" == "CentOS" ]; then
		yum install -y epel-release || true
		yum-config-manager --enable epel 2>/dev/null || true
		dyi "$noconfirm" which
	fi

	# Install the prequisites we'd like to have
	echo "Installing prequisites..."
	dyx 2>/dev/null || true
	dyi "$noconfirm" zsh git sudo mosh nano htop aria2 wget
	dyi "$noconfirm" byobu 2>/dev/null || true
	rehash 2>/dev/null || true
}

# Automatic prequisite installation is only tested on Arch and Ubuntu
if [ "$cmd" != "--no-internet" ]; then
if [ "$1" == "--force" ]; then
	installPrequisites
else
	if [ "$dyDetectedDistro" == "FreeBSD" ] || [ "$dyDetectedDistro" == "arch" ] || [ "$dyDetectedDistro" == "ubuntu" ] || [ "$dyDetectedDistro" == "CentOS" ]; then
		installPrequisites
	else
		echo "Error: Your distribution '$dyDetectedDistro' has not been tested for automatic package installation."
		echo "       Please install the following list of tools manually and rerun the installation with '--force':"
		echo ""
		echo "Required:    which zsh git"
		echo "Recommended: sudo mosh nano byobu"
		echo "Optional:    htop aria2 wget"
		exit 1
	fi
fi
fi

# Install hachreAliases
echo "Installing hachreAliases..."
if [ "$cmd" != "--no-internet" ]; then
	$c https://raw.githubusercontent.com/hachre/aliases/master/install.sh | bash
fi
source /usr/local/hachre/aliases/source/aliases.sh || true

# Install zsh syntax highlighting
echo "Installing zsh syntax highlighting..."
if [ "$cmd" != "--no-internet" ]; then
	git clone https://github.com/zsh-users/zsh-syntax-highlighting.git /usr/local/hachre/aliases/zsh-syntax-highlighting
fi

# Install nano syntax highlighting
echo "Installing nano syntax highlighting..."
if [ "$cmd" != "--no-internet" ]; then
	git clone https://github.com/scopatz/nanorc.git /usr/local/hachre/aliases/nano-syntax-highlighting
fi
prev=$(pwd)
cd /usr/local/hachre/aliases/nano-syntax-highlighting
git checkout fe659cb3f69f7fa382aa321c8f20259c442d5d3e
cd "$prev"
if [ -f "/etc/nanorc" ]; then
	cat /etc/nanorc | grep -v "hachre/aliases" > /etc/nanorc.tmp
	mv /etc/nanorc.tmp /etc/nanorc
fi
echo "include /usr/local/hachre/aliases/nano-syntax-highlighting/*.nanorc" >> /etc/nanorc
if [ "$dyDetectedDistro" == "FreeBSD" ]; then
	mv /etc/nanorc /usr/local/etc/nanorc
	ln -s /usr/local/bin/bash /bin/bash
fi

# Installing the user defaults
echo "Installing default user profiles..."
if [ "$cmd" != "--no-internet" ]; then
	$c https://git.grml.org/f/grml-etc-core/etc/zsh/zshrc > $HOME/.zshrc_grml
fi
echo "SAVEHIST=10000" >> $HOME/.zshrc_grml

# hachre's Default .zshrc
touch $HOME/.zshrc_local
cat << EOF > $HOME/.zshrc
# hachreShell
# Do not edit this file! It will get overwritten on updates. Edit ~/.zshrc_local instead.
EDITOR="nano"
source "\$HOME/.zshrc_grml"
source "/usr/local/hachre/aliases/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
emulate sh -c "source /usr/local/hachre/aliases/source/aliases.sh"
source "\$HOME/.zshrc_local"
if [ -f "/var/run/reboot-required" ]; then
    echo " *** Reboot required ***"
fi
echo "Welcome :)"
if [ -f "/etc/motd" ]; then
	if [ \$(cat /etc/motd | wc -l) -gt "0" ]; then
		echo ""
		cat /etc/motd
	fi
fi
EOF

# htop
mkdir -p $HOME/.config/htop 2>/dev/null || true
echo "hide_userland_threads=1" >> $HOME/.config/htop/htoprc
echo "hide_kernel_threads=1" >> $HOME/.config/htop/htoprc

# Install byobu settings
echo "Installing byobu settings..."
if [ "$cmd" != "--no-internet" ]; then
	$c https://raw.githubusercontent.com/hachre/aliases/master/byobu-settings.tar.gz > /tmp/byobu-settings.tar.gz
fi
if [ -f "/tmp/byobu-settings.tar.gz" ]; then
	cd $HOME
	tar xzf /tmp/byobu-settings.tar.gz
	rm /tmp/byobu-settings.tar.gz
	rm -R .byobu 2>/dev/null || true
	mv byobu .byobu
else
	touch $HOME/.byobu
fi

# Correct home permissions
echo "Fixing some permissions in '$HOME'..."
chown -R $USER $HOME/.zshrc* $HOME/.config/htop $HOME/.byobu
chmod -R u=rwX,g-rwx,o-rwx $HOME/.zshrc* $HOME/.config/htop $HOME/.byobu
chmod -R u=rwX,g-rwx,o-rwx $HOME/.ssh 2>/dev/null || true
chmod u=rwX,g-rwx,o-rwx $HOME
rm $HOME/.bybou 1>/dev/null 2>&1 || true

# Switch to zsh
chsh -s $(which zsh)

# Finished
echo ""
echo "Setup complete!"
echo "Run 'byobu-enable' and 'byobu' on your next login."
